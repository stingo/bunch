<style>

  #canvas {
    width: 100%;
    height: 250px;
  }

  audio {
    width: calc(100% - 20px);
  }
</style>

<div class="col-sm-12">
  <p id="notice"><%= notice %></p>

  <div class="col-sm-12 text-left"><strong>Title: </strong><%= @song.title %></div>

  <div class="col-sm-3">
    <%= image_tag(@song.songcover_url(:thumb), style: 'width: 100%; height: 250px', alt: 'Song cover') %>
    <p class="text-left">
      <%= link_to 'Edit', edit_song_path(@song) %> |
      <%= link_to 'Back', songs_path %> |
      <%= link_to 'Destroy', @song, method: :delete, data: { confirm: 'Are you sure?' } %>
    </p>
  </div>

  <div class="col-sm-9">
    <input type="hidden" name="audio_file" id="audio-file" value="<%= @song.sound.url %>">
    <canvas id="canvas"></canvas>
    <audio id="audio" controls></audio>
  </div>
</div>

<!--script for player-->
<script>
  $(document).ready(function(){
      window.onload = function() {

          var file = document.getElementById("audio-file").value;
          var audio = document.getElementById("audio");

          audio.src = file;
          audio.load();
          audio.play();
          var context = new AudioContext();
          var src = context.createMediaElementSource(audio);
          var analyser = context.createAnalyser();

          var canvas = document.getElementById("canvas");
          canvas.width = window.innerWidth;
          canvas.height = window.innerHeight;
          var ctx = canvas.getContext("2d");

          src.connect(analyser);
          analyser.connect(context.destination);

          analyser.fftSize = 256;

          var bufferLength = analyser.frequencyBinCount;
          console.log(bufferLength);

          var dataArray = new Uint8Array(bufferLength);

          var WIDTH = canvas.width;
          var HEIGHT = canvas.height;

          var barWidth = (WIDTH / bufferLength) * 2.5;
          var barHeight;
          var x = 0;

          function renderFrame() {
              requestAnimationFrame(renderFrame);

              x = 0;

              analyser.getByteFrequencyData(dataArray);

              ctx.fillStyle = "#000";
              ctx.fillRect(0, 0, WIDTH, HEIGHT);

              for (var i = 0; i < bufferLength; i++) {
                  barHeight = dataArray[i];

                  var r = barHeight + (25 * (i/bufferLength));
                  var g = 250 * (i/bufferLength);
                  var b = 50;

                  ctx.fillStyle = "rgb(" + r + "," + g + "," + b + ")";
                  ctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);

                  x += barWidth + 1;
              }
          }

          audio.play();
          renderFrame();
      }();
  });
</script>


